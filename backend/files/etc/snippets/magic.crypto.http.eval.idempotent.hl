/*
 * This snippet cryptographically signs and encrypts the
 * specified [.lambda] object, for then to transmit it to
 * the specified URL, which then will execute the lambda object,
 * wrapped in a [whitelist] invocation. Then it will return
 * the result of the invocation back to the caller,
 * and cryptographically sign the result before returning it
 * to caller.
 * 
 * Notice, a request will only be executed if the request id
 * has not been previously executed on the server, we will
 * therefor have to create a unique [.request-id] that we
 * pass in as its payload.
 */
guid.new
unwrap:x:+/**/.request-id
signal:magic.crypto.http.eval
   url:"http://localhost:5000/magic/system/crypto/eval-id"
   .lambda

      /*
       * The [.request-id] needs to be a unique value,
       * on a per request level, hence using the guid we
       * generated above.
       */
      .request-id:x:@guid.new
      vocabulary
      slots.vocabulary
      add:x:./*/return
         get-nodes:x:@vocabulary/*
         get-nodes:x:@slots.vocabulary/*
      return
