
/*
 * Configures OpenAI using its default training data,
 * and the specified API key.
 */
.arguments
   key:string
.type:internal
.description:Saves your OpenAI API key to your configuration object

// Making sure user has access to invoked endpoint.
auth.ticket.verify:root

// Sanity checking invocation
validators.mandatory:x:@.arguments/*/key
validators.string:x:@.arguments/*/key
   min:20
   max:200

// Loading configuration.
config.load
json2lambda:x:@config.load

// Removing existing OpenAI key, if existing.
if
   exists:x:@json2lambda/*/magic/*/openai/*/key
   .lambda

      // OpenAI has already been configured, removing existing key.
      remove-nodes:x:@json2lambda/*/magic/*/openai

// Adding specified key to configuration.
unwrap:x:+/*/*/*
add:x:@json2lambda/*/magic
   .
      openai
         key:x:@.arguments/*/key

// Transforming to JSON and saving configuration.
lambda2json:x:@json2lambda/*
config.save:x:@lambda2json

// Returning success to caller.
return
   result:success
