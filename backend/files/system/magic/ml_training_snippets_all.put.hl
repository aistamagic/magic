
// CRUD update endpoint updating all filtered records in your ml_training_snippets table in your magic database with authentication and authorisation for root roles
.arguments
   filter
      ml_training_snippets.prompt.like:string
      ml_training_snippets.uri.like:string
      ml_training_snippets.type.eq:string
   values
      type:string
      pushed:long
.description:CRUD update endpoint updating all filtered records in your ml_training_snippets table in your magic database with authentication and authorisation for root roles
.type:crud-update

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up our database connection.
data.connect:[generic|magic]

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.update/*/where/*/*/or
      get-nodes:x:@.arguments/*/filter/*/ml_training_snippets.prompt.like
      get-nodes:x:@.arguments/*/filter/*/ml_training_snippets.uri.like
      get-nodes:x:@.arguments/*/filter/*/ml_training_snippets.prompt.eq
      get-nodes:x:@.arguments/*/filter/*/ml_training_snippets.uri.eq
   remove-nodes:x:@.arguments/*/filter/*/ml_training_snippets.prompt.like
   remove-nodes:x:@.arguments/*/filter/*/ml_training_snippets.uri.like
   remove-nodes:x:@.arguments/*/filter/*/ml_training_snippets.prompt.eq
   remove-nodes:x:@.arguments/*/filter/*/ml_training_snippets.uri.eq
   add:x:./*/data.update/*/where/*
      get-nodes:x:@.arguments/*/filter/*
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/values/*

   // Removing [or] parts unless we've got something to actually or.
   if
      not-exists:x:@data.connect/*/data.update/*/where/*/and/*/or/*
      .lambda
         remove-nodes:x:@data.connect/*/data.update/*/where/*/and/*/or

   // Invoking our update slot.
   data.update
      table:ml_training_snippets
      values
      where
         and
            or

   // Verifying record exists.
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found

   // Returning the correct status code.
   response.status.set:202

   // Returning success to caller.
   unwrap:x:+/*
   return
      affected:x:@data.update
