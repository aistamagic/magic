// How to invoke HTTP endpoint?

/*
 * To invoke an HTTP endpoint, such as for instance a REST endpoint, or
 * a GraphQL endpoint for that matter, you would typically use one of
 * the following slots;
 *
 * - [http.get] - Invokes HTTP GET verb towards the specified URL.
 * - [http.post] - Invokes HTTP POST verb towards the specified URL.
 * - [http.put] - Invokes HTTP PUT verb towards the specified URL.
 * - [http.patch] - Invokes HTTP PATCH verb towards the specified URL.
 * - [http.delete] - Invokes HTTP DELETE verb towards the specified URL.
 *
 * The above are the 5 basic verbs most commonly used in HTTP, and Magic allows
 * for providing payloads to its POST, PUT and PATCH slots. DELETE and GET
 * slots can only be given QUERY parameters. Below are examples of
 * all of these slots.
 */

// Invokes HTTP GET towards aista.com.
http.get:"https://aista.com"

// Invokes HTTP POST towards jsonplaceholder.typicode.com/users.
http.post:"https://jsonplaceholder.typicode.com/users"
   convert:true

// Invokes HTTP PUT towards jsonplaceholder.typicode.com/users/3.
http.put:"https://jsonplaceholder.typicode.com/users/3"
   convert:true

// Invokes HTTP PUT towards jsonplaceholder.typicode.com/users/5.
http.patch:"https://jsonplaceholder.typicode.com/users/5"
   convert:true

// Invokes HTTP DELETE towards jsonplaceholder.typicode.com/users/7.
http.patch:"https://jsonplaceholder.typicode.com/users/7"
   convert:true

/*
 * Notice, the above [convert] argument makes sure Magic automatically
 * converts the response returned from the invocation to a semantic
 * lambda object.
 */
