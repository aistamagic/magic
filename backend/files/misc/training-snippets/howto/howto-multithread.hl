// How to multihread?

/*
 * Creating a new thread in Hyperlambda can be accomplished using the [fork]
 * slot. This slot by default creates a 'fire and forget' thread and immediately
 * executes the rest of its lambda object, without waiting for the thread to finish.
 *
 * The code below invokes an HTTP GET invocation towards foo.com, but does not
 * wait for the request to finish before continuing its execution.
 */

// Creating a new thread.
fork

   // Invoking foo.com.
   http.get:"https://foo.com"

/*
 * The above code creates a 'fire and forget thread'. Sometimes you need to
 * create multiple threads, and wait for all of your threads to finish before
 * proceeding with the next line of code. The code below creates two HTTP
 * requests, executing both in parallel, and waiting for both requests to
 * finish before proceeding.
 */

// The [join] slot will wait for all of its children [fork] slots to finish before proceeding.
join

   // Creating a new thread.
   fork

      // Invoking canva.com using HTTP GET.
      http.get:"https://canva.com"

   // Creating another thread.
   fork

      // Invoking sendgrid.com using HTTP GET.
      http.get:"https://sendgrid.com"

// Creating a log entry.
log.info:Both threads are done executing!
