
// CRUD read endpoint with filtering selecting records from your tickets table in your tickets database returning id, created, user, priority, status, department, title, description filtering on id, created, user, priority, status, department, title, description with authentication and authorisation for admin roles
.arguments
   tickets.id.eq:long
   tickets.created.eq:date
   tickets.priority.like:string
   tickets.priority.eq:string
   tickets.status.like:string
   tickets.status.eq:string
   tickets.department.like:string
   tickets.department.eq:string
   tickets.title.like:string
   tickets.title.eq:string
   tickets.description.like:string
   tickets.description.eq:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin

// Opening up our database connection.
data.connect:tickets

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:tickets
      columns
         tickets.id
         tickets.created
         tickets.priority
         tickets.status
         tickets.department
         tickets.title
         tickets.description
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
