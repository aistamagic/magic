
// CRUD read endpoint with sorting, filtering selecting records from your shipping table in your shipping database returning shipping_id, item_id, address_id filtering on shipping_id, item_id, address_id with authentication and authorisation for root,admin roles
.arguments
   order:string
   direction:string
   shipping.shipping_id.eq:long
   shipping.item_id.eq:long
   shipping.address_id.eq:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin
.foreign-keys
   .
      column:address_id
      table:address
      foreign_column:address_id
      foreign_name:street
      long:bool:true

// Opening up our database connection.
data.connect:shipping

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:shipping
      columns
         shipping.shipping_id
         shipping.item_id
         shipping.address_id
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
