
// CRUD read endpoint with paging, ordering, filtering selecting records from your leads table in your salesforce-clone database returning lead_id, name, email, phone, company_id filtering on lead_id, name, email, phone, company_id with authentication and authorisation for key_account_manager roles
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   leads.lead_id.eq:long
   leads.name.like:string
   leads.name.eq:string
   leads.email.like:string
   leads.email.eq:string
   leads.phone.like:string
   leads.phone.eq:string
   leads.company_id.eq:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:key_account_manager
.foreign-keys
   .
      column:company_id
      table:companies
      foreign_column:company_id
      foreign_name:name
      long:bool:true

// Opening up our database connection.
data.connect:salesforce-clone

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:leads
      columns
         leads.lead_id
         leads.name
         leads.email
         leads.phone
         leads.company_id
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
