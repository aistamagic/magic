
// CRUD create endpoint inserting one record into your departments table in your tickets database taking name with authentication and authorisation for guest,root,translator roles publishing tickets.departments.post socket message when invoked
.arguments
   name:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest,root,translator

// Opening up database connection.
data.connect:tickets

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      table:departments
      return-id:bool:false
      values

   // Returning the correct status code.
   response.status.set:201

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   add:x:./*/sockets.signal
      get-nodes:x:@auth.ticket.verify
   set-name:x:./*/sockets.signal/*/auth.ticket.verify
      .:roles
   sockets.signal:tickets.departments.post
      args

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      result:success
