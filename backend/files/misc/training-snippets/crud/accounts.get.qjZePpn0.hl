
// CRUD read endpoint with paging, ordering, filtering selecting records from your accounts table in your aista-crm database returning account_id, status, name, account_manager, created filtering on account_id, status, name, account_manager, created with authentication and authorisation for root,admin roles
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   accounts.account_id.eq:long
   accounts.status.eq:long
   accounts.name.like:string
   accounts.name.eq:string
   accounts.account_manager.eq:long
   accounts.created.eq:date

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up our database connection.
data.connect:aista-crm

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:accounts
      columns
         accounts.account_id
         accounts.status
         accounts.name
         accounts.account_manager
         accounts.created
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
