
// CRUD read endpoint with ordering, filtering selecting records from your content_category_relationships table in your headless_cms database returning content_id, category_id filtering on content_id, category_id with authentication and authorisation for root,admin roles
.arguments
   order:string
   direction:string
   content_category_relationships.content_id.eq:long
   content_category_relationships.category_id.eq:long
   content_id.title.eq:string
   content_id.title.like:string
   category_id.category_name.eq:string
   category_id.category_name.like:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up our database connection.
data.connect:headless_cms

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:content_category_relationships
         join:content
            as:content_id
            type:left
            on
               and
                  content_category_relationships.content_id:content_id.content_id
         join:content_categories
            as:category_id
            type:left
            on
               and
                  content_category_relationships.category_id:category_id.category_id
      columns
         content_category_relationships.content_id
         content_category_relationships.category_id
         content_id.title
            as:content_id.title
         category_id.category_name
            as:category_id.category_name
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
