
// CRUD delete endpoint deleting one record from your departments table in your tickets database with name matching argument with authentication and authorisation for admin,guest,root roles publishing tickets.departments.delete socket message when invoked
.arguments
   name:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin,guest,root

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/name

// Opening up our database connection.
data.connect:tickets

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      table:departments
      where
         and

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   add:x:./*/sockets.signal
      get-nodes:x:@auth.ticket.verify
   set-name:x:./*/sockets.signal/*/auth.ticket.verify
      .:roles
   sockets.signal:tickets.departments.delete
      args

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
