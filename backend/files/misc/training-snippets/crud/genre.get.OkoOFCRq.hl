
// CRUD read endpoint with ordering, filtering selecting records from your Genre table in your chinook database returning GenreId, Name filtering on GenreId, Name with authentication and authorisation for admin roles
.arguments
   order:string
   direction:string
   Genre.GenreId.eq:long
   Genre.Name.like:string
   Genre.Name.eq:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin

// Opening up our database connection.
data.connect:chinook

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:Genre
      columns
         Genre.GenreId
         Genre.Name
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
