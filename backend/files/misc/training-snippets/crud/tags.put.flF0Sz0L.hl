
// CRUD update endpoint updating one record in your tags table in your headless_cms database filtering which item to update with tag_id updating tag_name fields publishing headless_cms.tags.put socket message when invoked
.arguments
   tag_id:long
   tag_name:string

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/tag_id

// Opening up our database connection.
data.connect:headless_cms

   // Parametrising our invocation.
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]

   // Invoking our update slot.
   data.update
      table:tags
      values
      where
         and

   // Verifying record exists.
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found

   // Returning the correct status code.
   response.status.set:202

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:headless_cms.tags.put
      args
      roles:admin,guest

   // Returning success to caller.
   unwrap:x:+/*
   return
      affected:x:@data.update
