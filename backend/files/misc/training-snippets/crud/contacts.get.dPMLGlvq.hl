
// CRUD read endpoint with paging, ordering, filtering selecting records from your contacts table in your aista-crm database returning contact_id, account, name, phone, email, country, city, linkedIn, facebook, twitter, created filtering on contact_id, account, name, phone, email, country, city, linkedIn, facebook, twitter, created with authentication and authorisation for root roles
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   contacts.contact_id.eq:long
   contacts.account.eq:long
   contacts.name.like:string
   contacts.name.eq:string
   contacts.phone.like:string
   contacts.phone.eq:string
   contacts.email.like:string
   contacts.email.eq:string
   contacts.country.like:string
   contacts.country.eq:string
   contacts.city.like:string
   contacts.city.eq:string
   contacts.linkedIn.like:string
   contacts.linkedIn.eq:string
   contacts.facebook.like:string
   contacts.facebook.eq:string
   contacts.twitter.like:string
   contacts.twitter.eq:string
   contacts.created.eq:date

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up our database connection.
data.connect:aista-crm

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:contacts
      columns
         contacts.contact_id
         contacts.account
         contacts.name
         contacts.phone
         contacts.email
         contacts.country
         contacts.city
         contacts.linkedIn
         contacts.facebook
         contacts.twitter
         contacts.created
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
