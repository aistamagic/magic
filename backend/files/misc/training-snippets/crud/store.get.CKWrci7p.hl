
// CRUD read endpoint with paging, ordering, filtering selecting records from your store table in your sakila database returning store_id, manager_staff_id, address_id, last_update filtering on store_id, manager_staff_id, address_id, last_update with public HTTP caching for 15 seconds
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   store.store_id.eq:long
   store.manager_staff_id.eq:long
   store.address_id.eq:long
   store.last_update.eq:date

// Adding Cache-Control HTTP header.
response.headers.set
   Cache-Control:public, max-age=15

// Opening up our database connection.
data.connect:sakila

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:store
      columns
         store.store_id
         store.manager_staff_id
         store.address_id
         store.last_update
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
