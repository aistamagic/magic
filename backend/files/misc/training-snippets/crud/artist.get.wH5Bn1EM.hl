
// CRUD read endpoint with paging, filtering selecting records from your Artist table in your chinook database returning ArtistId, Name filtering on ArtistId, Name with authentication and authorisation for admin roles
.arguments
   limit:long
   offset:long
   Artist.ArtistId.eq:long
   Artist.Name.like:string
   Artist.Name.eq:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin

// Opening up our database connection.
data.connect:chinook

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:Artist
      columns
         Artist.ArtistId
         Artist.Name
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
