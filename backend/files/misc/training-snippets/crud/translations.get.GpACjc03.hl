
// CRUD read endpoint with paging, filtering selecting records from your translations table in your babelfish database returning id, locale, content filtering on id, locale, content with authentication and authorisation for root roles
.arguments
   limit:long
   offset:long
   translations.id.like:string
   translations.id.eq:string
   translations.locale.like:string
   translations.locale.eq:string
   translations.content.like:string
   translations.content.eq:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up our database connection.
data.connect:babelfish

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:translations
      columns
         translations.id
         translations.locale
         translations.content
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
