
// CRUD update endpoint updating one record in your translations table in your babelfish database filtering which item to update with id, locale updating content fields with authentication and authorisation for root roles
.arguments
   id:string
   locale:string
   content:string

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/locale
validators.mandatory:x:@.arguments/*/id

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up our database connection.
data.connect:babelfish

   // Parametrising our invocation.
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[2,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,2]

   // Invoking our update slot.
   data.update
      table:translations
      values
      where
         and

   // Verifying record exists.
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found

   // Returning the correct status code.
   response.status.set:202

   // Returning success to caller.
   unwrap:x:+/*
   return
      affected:x:@data.update
