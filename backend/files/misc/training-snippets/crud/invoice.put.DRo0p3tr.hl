
// CRUD update endpoint updating one record in your Invoice table in your chinook database filtering which item to update with InvoiceId updating CustomerId, InvoiceDate, BillingAddress, BillingCity, BillingState, BillingCountry, BillingPostalCode, Total fields with authentication and authorisation for admin roles
.arguments
   InvoiceId:long
   CustomerId:long
   InvoiceDate:date
   BillingAddress:string
   BillingCity:string
   BillingState:string
   BillingCountry:string
   BillingPostalCode:string
   Total:decimal

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/InvoiceId

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin

// Opening up our database connection.
data.connect:chinook

   // Parametrising our invocation.
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]

   // Invoking our update slot.
   data.update
      table:Invoice
      values
      where
         and

   // Verifying record exists.
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found

   // Returning the correct status code.
   response.status.set:202

   // Returning success to caller.
   unwrap:x:+/*
   return
      affected:x:@data.update
