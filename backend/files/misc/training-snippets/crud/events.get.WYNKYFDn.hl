
// CRUD read endpoint with paging, ordering, filtering selecting records from your events table in your salesforce-clone database returning event_id, name, description, start_date, end_date, contact_id, deal_id filtering on event_id, name, description, start_date, end_date, contact_id, deal_id with authentication and authorisation for key_account_manager roles
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   events.event_id.eq:long
   events.name.like:string
   events.name.eq:string
   events.description.like:string
   events.description.eq:string
   events.start_date.eq:date
   events.end_date.eq:date
   events.contact_id.eq:long
   events.deal_id.eq:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:key_account_manager
.foreign-keys
   .
      column:contact_id
      table:contacts
      foreign_column:contact_id
      foreign_name:first_name
      long:bool:true
   .
      column:deal_id
      table:deals
      foreign_column:deal_id
      foreign_name:name
      long:bool:true

// Opening up our database connection.
data.connect:salesforce-clone

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:events
      columns
         events.event_id
         events.name
         events.description
         events.start_date
         events.end_date
         events.contact_id
         events.deal_id
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
