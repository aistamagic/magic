
// CRUD read endpoint with sorting, filtering selecting records from your items table in your shipping database returning item_id, product_id, quantity filtering on item_id, product_id, quantity with authentication and authorisation for root,admin roles
.arguments
   order:string
   direction:string
   items.item_id.eq:long
   items.product_id.eq:long
   items.quantity.eq:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin
.foreign-keys
   .
      column:product_id
      table:products
      foreign_column:product_id
      foreign_name:name
      long:bool:true

// Opening up our database connection.
data.connect:shipping

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:items
      columns
         items.item_id
         items.product_id
         items.quantity
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
