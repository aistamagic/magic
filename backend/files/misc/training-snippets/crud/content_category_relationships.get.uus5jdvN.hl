
// CRUD read endpoint with paging, ordering, filtering selecting records from your content_category_relationships table in your headless_cms database returning content_id, category_id filtering on content_id, category_id with private HTTP caching for 130 seconds
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   content_category_relationships.content_id.eq:long
   content_category_relationships.category_id.eq:long

// Adding Cache-Control HTTP header.
response.headers.set
   Cache-Control:private, max-age=130
.foreign-keys
   .
      column:content_id
      table:content
      foreign_column:content_id
      foreign_name:title
      long:bool:true
   .
      column:category_id
      table:content_categories
      foreign_column:category_id
      foreign_name:category_name
      long:bool:true

// Opening up our database connection.
data.connect:headless_cms

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:content_category_relationships
      columns
         content_category_relationships.content_id
         content_category_relationships.category_id
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
