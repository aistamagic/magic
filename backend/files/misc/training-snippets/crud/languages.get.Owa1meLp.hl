
// CRUD read endpoint with paging, filtering selecting records from your languages table in your babelfish database returning locale, language filtering on locale, language with authentication and authorisation for root roles
.arguments
   limit:long
   offset:long
   languages.locale.like:string
   languages.locale.eq:string
   languages.language.like:string
   languages.language.eq:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up our database connection.
data.connect:babelfish

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:languages
      columns
         languages.locale
         languages.language
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
