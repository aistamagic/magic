
// CRUD read endpoint with ordering, filtering selecting records from your tasks table in your salesforce-clone database returning task_id, name, description, due_date, contact_id, deal_id filtering on task_id, name, description, due_date, contact_id, deal_id with authentication and authorisation for key_account_manager roles
.arguments
   order:string
   direction:string
   tasks.task_id.eq:long
   tasks.name.like:string
   tasks.name.eq:string
   tasks.description.like:string
   tasks.description.eq:string
   tasks.due_date.eq:date
   tasks.contact_id.eq:long
   tasks.deal_id.eq:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:key_account_manager
.foreign-keys
   .
      column:contact_id
      table:contacts
      foreign_column:contact_id
      foreign_name:first_name
      long:bool:true
   .
      column:deal_id
      table:deals
      foreign_column:deal_id
      foreign_name:name
      long:bool:true

// Opening up our database connection.
data.connect:salesforce-clone

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:tasks
      columns
         tasks.task_id
         tasks.name
         tasks.description
         tasks.due_date
         tasks.contact_id
         tasks.deal_id
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
