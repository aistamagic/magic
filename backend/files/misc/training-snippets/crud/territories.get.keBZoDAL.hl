
// CRUD read endpoint with paging, ordering, filtering selecting records from your Territories table in your northwind database returning TerritoryID, TerritoryDescription, RegionID filtering on TerritoryID, TerritoryDescription, RegionID
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   operator:string
   Territories.TerritoryID.like:string
   Territories.TerritoryID.mt:string
   Territories.TerritoryID.lt:string
   Territories.TerritoryID.mteq:string
   Territories.TerritoryID.lteq:string
   Territories.TerritoryID.neq:string
   Territories.TerritoryID.eq:string
   Territories.TerritoryDescription.like:string
   Territories.TerritoryDescription.mt:string
   Territories.TerritoryDescription.lt:string
   Territories.TerritoryDescription.mteq:string
   Territories.TerritoryDescription.lteq:string
   Territories.TerritoryDescription.neq:string
   Territories.TerritoryDescription.eq:string
   Territories.RegionID.mt:long
   Territories.RegionID.lt:long
   Territories.RegionID.mteq:long
   Territories.RegionID.lteq:long
   Territories.RegionID.neq:long
   Territories.RegionID.eq:long

// Sanity checking invocation.
validators.enum:x:@.arguments/*/operator
   .:or
   .:and

/*
 * Checking if user supplied an [operator] argument, and if so
 * changing the boolean operator for comparison operations.
 */
if
   exists:x:@.arguments/*/operator
   .lambda

      // User provided a boolean comparison [operator] argument.
      set-name:x:../*/data.connect/*/data.read/*/where/0
         get-value:x:@.arguments/*/operator
      remove-nodes:x:@.arguments/*/operator

// Opening up our database connection.
data.connect:northwind

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:Territories
      columns
         Territories.TerritoryID
         Territories.TerritoryDescription
         Territories.RegionID
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
