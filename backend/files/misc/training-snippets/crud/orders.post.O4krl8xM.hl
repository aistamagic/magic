
// CRUD create endpoint inserting one record into your Orders table in your northwind database taking CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia, Freight, ShipName, ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry with logging with reCAPTCHA value of 0.3 publishing northwind.orders.post socket message when invoked
.arguments
   recaptcha:string
   CustomerID:string
   EmployeeID:long
   OrderDate:date
   RequiredDate:date
   ShippedDate:date
   ShipVia:long
   Freight:decimal
   ShipName:string
   ShipAddress:string
   ShipCity:string
   ShipRegion:string
   ShipPostalCode:string
   ShipCountry:string

// Checking reCAPTCHA value if backend is configured with reCAPTCHA configuration settings.
config.get:"magic:auth:recaptcha:key"
config.get:"magic:auth:recaptcha:secret"
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
      neq:x:@config.get/@config.get
         .
      neq:x:@config.get/@config.get
         .:
   .lambda

      // reCAPTCHA configuration settings found.
      validators.mandatory:x:@.arguments/*/recaptcha
      validators.recaptcha:x:@.arguments/*/recaptcha/[0,1]
         site-key:x:@config.get/@config.get
         secret:x:@config.get
         min:decimal:0.3

// To remove reCAPTCHA value preventing it from being used as an argument further down in file.
remove-nodes:x:@.arguments/*/recaptcha/[0,1]

// Logging invocation.
auth.ticket.get
lambda2hyper:x:@.arguments/*
log.info:northwind.Orders entry created
   username:x:@auth.ticket.get
   arguments:x:@lambda2hyper

// Opening up database connection.
data.connect:northwind

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      table:Orders
      return-id:bool:true
      values

   // Returning the correct status code.
   response.status.set:201

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:northwind.orders.post
      args

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      id:x:@data.create
