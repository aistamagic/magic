
// Macro for Hyper IDE that ensures that as module is installed, a folder inside of the '/etc/' folder will be created where the module can store its configuration files, images, and other types of dynamic files related to the module.
.name:Ensures your modules has an /etc/ dynamic files folder
.description:"Macro for Hyper IDE that ensures that as module is installed, a folder inside of the '/etc/' folder will be created where the module can store its configuration files, images, and other types of dynamic files related to the module. Notice, the image macros will by default store files inside of this folder, so if you execute the image upload/download macros, you should also probably execute this macro."
.arguments
   .
      name:module
      type:string
      description:"Name of module to create an '/etc/' folder for"
      mandatory:bool:true

// Lambda object executed as macro is actually executed.
.lambda

   // Sanity checking invocation.
   validators.mandatory:x:@.arguments/*/module
   validators.regex:x:@.arguments/*/module
      regex:^[a-zA-Z0-9_-]+$

   // Figuring out module's complete path.
   .module-path
   set-value:x:@.module-path
      strings.concat
         .:/modules/
         get-value:x:@.arguments/*/module
         .:/

   // Making sure that module exists.
   if
      not
         io.folder.exists:x:@.module-path
      .lambda

         // No such module
         strings.concat
            .:"The module called '"
            get-value:x:@.arguments/*/module
            .:"' does not exist"
         throw:x:-
            public:bool:true
            status:int:404

   /*
    * Making sure that module has a 'magic.startup' folder, and creating one
    * if no such folder exists.
    */
   strings.concat
      get-value:x:@.module-path
      .:/magic.startup/
   if
      not
         io.folder.exists:x:@strings.concat
      .lambda

         // Creating the module's 'magic.startup' folder.
         io.folder.create:x:@strings.concat

   /*
    * Lambda object that will be persisted as 'ensure-etc-folder.hl' file inside of
    * module's 'magic.startup' folder.
    */
   set-value:x:./*/.file/*/.folder
      strings.concat
         .:/etc/
         .:x:@.arguments/*/module
         .:/
   .file
      .folder
      if
         not
            io.folder.exists:x:@.folder
         .lambda
            io.folder.create:x:@.folder

   /*
    * Transforming lambda to Hyperlambda and persisting
    * as '/modules/xxx/magic.startup/ensure-etc-folder.hl' file.
    */
   strings.concat
      get-value:x:@.module-path
      .:magic.startup/
      .:ensure-etc-folder.hl
   io.file.save:x:@strings.concat
      lambda2hyper:x:@.file/*

   // Making sure we inform caller that he needs to refresh his folders.
   set-value:x:@.lambda
      .:folders-changed
