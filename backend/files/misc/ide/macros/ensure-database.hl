
// Macro for Hyper IDE that creates a 'magic.startup' folder for you within your module that automatically creates your database if it does not exist from before.
.name:"Ensures your module's database exists"
.description:"Macro for Hyper IDE that creates a 'magic.startup' folder for you within your module's main folder that automatically creates your database if it does not exist from before. Notice, this macro requires that you supply at least one of a MySQL database create script or an MS SQL database create script, or preferably both if you can."
.arguments
   .
      name:module
      type:string
      description:"Name of module to create a 'magic.startup' folder for"
      mandatory:bool:true
   .
      name:database
      type:string
      description:"The name of your application's database. Typically the same as your module's name"
      mandatory:bool:true
   .
      name:mssql
      type:multi_string
      description:Microsoft SQL server create database SQL script. At least one of the MySQL, PostgreSQL or MS SQL create scripts needs to be supplied.
      mandatory:bool:false
   .
      name:mysql
      type:multi_string
      description:MySQL create database SQL script. At least one of the MySQL, PostgreSQL or MS SQL create scripts needs to be supplied.
      mandatory:bool:false
   .
      name:pgsql
      type:multi_string
      description:PostgreSQL create database SQL script. At least one of the MySQL, PostgreSQL or MS SQL create scripts needs to be supplied.
      mandatory:bool:false

// Lambda object executed as macro is actually executed.
.lambda

   // Sanity checking invocation.
   validators.mandatory:x:@.arguments/*/module
   validators.regex:x:@.arguments/*/module
      regex:^[a-zA-Z0-9_-]+$

   // Figuring out module's complete path.
   .module-path
   set-value:x:@.module-path
      strings.concat
         .:/modules/
         get-value:x:@.arguments/*/module
         .:/

   // Making sure that module exists.
   if
      not
         io.folder.exists:x:@.module-path
      .lambda

         // No such module
         strings.concat
            .:"The module called '"
            get-value:x:@.arguments/*/module
            .:"' does not exist"
         throw:x:-
            public:bool:true
            status:int:404

   // Making sure that at least one of [mysql] or [mssql] arguments was given.
   if
      and
         not
            exists:x:@.arguments/*/mysql
         not
            exists:x:@.arguments/*/mssql
      .lambda

         // Neither MS SQL nor MySQL was given, and hence there are no reasons to create 'magic.startup' folder.
         throw:"You have to supply either [mysql] or [mssql] arguments, or both. There are no reasons to create a 'magic.startup' folder without at least one of these"
            public:bool:true
            status:int:404

   // Copying main 'magic.startup' template folder from misc folder.
   strings.concat
      get-value:x:@.module-path
      .:/magic.startup/
   io.folder.copy:/misc/ide/template-folders/magic.startup/
      get-value:x:@strings.concat

   /*
    * Opening 'create-database.hl' file such that we can correctly decorate it
    * according to arguments specified by caller.
    * 
    * First loading file and transforming to lambda.
    */
   strings.concat
      get-value:x:@.module-path
      .:/magic.startup/create-database.hl
   io.file.load:x:@strings.concat
   hyper2lambda:x:@io.file.load
      comments:true

   // Adding module's name into file.
   unwrap:x:+/*/*
   add:x:@hyper2lambda/*/signal
      .
         module:x:@.arguments/*/module
         database:x:@.arguments/*/module

   // Then transforming file to Hyperlambda and saving it again.
   lambda2hyper:x:@hyper2lambda/*
      comments:true
   io.file.save:x:@strings.concat
      get-value:x:@lambda2hyper

   /*
    * Checking if caller supplied a [mssql] argument, and if so, creating the
    * create MSSQL database file.
    */
   if
      exists:x:@.arguments/*/mssql
      .lambda

         // Creating our 'module.mssql.sql' file.
         strings.concat
            get-value:x:@.module-path
            .:/magic.startup/
            get-value:x:@.arguments/*/module
            .:.mssql.sql
         io.file.save:x:@strings.concat
            get-value:x:@.arguments/*/mssql

   /*
    * Checking if caller supplied a [mysql] argument, and if so, creating the
    * create MYSQL database file.
    */
   if
      exists:x:@.arguments/*/mysql
      .lambda

         // Creating our 'module.mysql.sql' file.
         strings.concat
            get-value:x:@.module-path
            .:/magic.startup/
            get-value:x:@.arguments/*/module
            .:.mysql.sql
         io.file.save:x:@strings.concat
            get-value:x:@.arguments/*/mysql

   // Making sure we inform caller that he needs to refresh his folders.
   set-value:x:@.lambda
      .:folders-changed
